// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CalibrusTPV.ReversePocoGen
{

    // Recordings
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.28.0.0")]
    public class RecordingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Recording>
    {
        public RecordingConfiguration()
            : this("dbo")
        {
        }

        public RecordingConfiguration(string schema)
        {
            ToTable("Recordings", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TpvId).HasColumnName(@"TPVId").HasColumnType("int").IsRequired();
            Property(x => x.CallType).HasColumnName(@"CallType").HasColumnType("int").IsRequired();
            Property(x => x.Created).HasColumnName(@"Created").HasColumnType("datetime").IsRequired();
            Property(x => x.CallTime).HasColumnName(@"CallTime").HasColumnType("int").IsRequired();
            Property(x => x.Wavename).HasColumnName(@"wavename").HasColumnType("nchar").IsOptional().IsFixedLength().HasMaxLength(50);
            Property(x => x.TpvAgentId).HasColumnName(@"tpvAgentId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasRequired(a => a.Tpv).WithMany(b => b.Recordings).HasForeignKey(c => c.TpvId).WillCascadeOnDelete(false); // FK_Recordings_TPV
        }
    }

}
// </auto-generated>
