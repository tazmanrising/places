@using Calibrus.SparkPortal.Web
@model Calibrus.SparkPortal.ViewModel.VendorViewModel
@{
    ViewBag.Title = "Edit";
}

<div class="container">

    <div class="page-header">
        <h1>
            Admin Maintenance
            <small>Edit Vendor</small>
        </h1>
    </div>

    <div class="row">

        <h3>Vendor Information</h3><br />

        @using (Html.BeginForm("Edit", "Vendor", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()

            <div class="col-md-offset-3 col-md-6">
                @Html.ValidationSummary(false, "Please fix the following errors:", new { @class = "alert alert-danger" })
                @if (TempData["success"] != null)
                {
                    <div class="alert alert-success">@TempData["success"]</div>
                }
            </div>

            <div class="clearfix"></div>

            <div class="form-group">
                @Html.LabelFor(model => model.VendorName, new { @class = "col-md-2 control-label", @for = "VendorName" })
                <div class="col-md-6 col-sm-10">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-ellipsis-v text-danger "></i></span>
                        @Html.TextBoxFor(model => model.VendorName, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.ValidationMessageFor(model => model.VendorName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VendorNumber, new { @class = "col-md-2 control-label ", @for = "VendorNumber" })
                <div class="col-md-6 col-sm-10">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-ellipsis-v text-danger "></i></span>
                        @Html.TextBoxFor(model => model.VendorNumber, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-4">
                    @Html.ValidationMessageFor(model => model.VendorNumber)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CommissionNumber, new { @class = "col-md-2 control-label ", @for = "CommissionNumber" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.CommissionNumber, new { @class = "form-control" })
                </div>
                <div class="col-md-4">
                    @Html.ValidationMessageFor(model => model.CommissionNumber)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, new { @class = "col-lg-2 control-label", @for = "IsActive" })
                <div class="col-lg-10">
                    @Html.CheckBoxFor(model => model.IsActive, new { @class = "checkbox" })
                </div>
            </div>

            @Html.HiddenFor(x => x.Id)

            <div class="form-group">
                <div class="col-lg-10 text-center">
                    <input class="btn btn-primary" type="submit" value="Update" />
                    <a href="@SessionVars.ReturnUrl" class="btn btn-warning">Cancel</a>
                </div>
            </div>

        }

        <div>

            <h3>Offices</h3>

            <div class="row" ng-controller="vendorOfficeController as vm">

                <table class="table table-striped table-condensed">
                    <thead>
                        <tr colspan="7">
                            <div class="pull-right">
                                <input type="text" class="form-control input-sm" ng-model="vm.filter" ng-change="vm.filterOffices()" placeholder="filter list..." />
                            </div>
                        </tr>
                        <tr>
                            <th>Office Name</th>
                            <th>Office Email</th>
                            <th>Active</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <td colspan="7">
                                <pagination total-items="vm.totalItems" items-per-page="vm.pageSize" ng-model="vm.currentPage" ng-change="vm.pageChanged()"></pagination>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="7">
                                @Html.ActionLink("Add New Office", "Create", "Office", new { id = Model.Id }, new { @class = "btn btn-success" })
                            </td>
                        </tr>
                    </tfoot>
                    <tbody>
                        <tr ng-repeat="office in vm.officePage">
                            <td>{{office.OfficeName}}</td>
                            <td>{{office.OfficeEmail}}</td>
                            <td>{{office.IsActive}}</td>
                            <td class="col-lg-2 text-center">
                                <a href="~/Office/Edit/{{ office.Id }}"><i class="fa fa-pencil-square-o fa-2x" title="Edit"></i></a>
                                <a href="" style="cursor:pointer;">
                                    <i ng-if="office.IsActive" class="fa fa-minus-square-o fa-2x" title="Set Inactive" ng-click="vm.open(office)"></i>
                                    <i ng-if="!office.IsActive" class="fa fa-check-square-o fa-2x" title="Set Active" ng-click="vm.open(office)"></i>
                                </a>
                            </td>
                        </tr>
                    </tbody>
                </table>

                <script type="text/ng-template" id="myModalContent.html">
                    <div class="modal-header">
                        <h3 class="modal-title">{{pop.header}}</h3>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-primary" ng-click="pop.ok('@SessionVars.UserName')">OK</button>
                        <button class="btn btn-warning" ng-click="pop.cancel()">Cancel</button>
                    </div>
                </script>
            </div>

            <h3>Programs</h3>

            <div class="row" ng-controller="vendorProgramController as vm">

                <table class="table table-striped table-condensed">
                    <thead>
                        <tr>
                            <th colspan="11">
                                <div class="pull-right">
                                    <input type="checkbox" ng-model="vm.showInactive" ng-change="vm.filterRates()" /> Show Inactive Programs
                                    <input type="text" class="form-control input-sm" ng-model="vm.filter" ng-change="vm.filterRates()" placeholder="filter list..." />
                                </div>
                            </th>
                        </tr>
                        <tr>
                            <th ng-click="vm.sortRates('ProgramCode');" style="cursor: pointer;">
                                Program Code
                                <i ng-class="{'fa fa-sort-up': vm.predicate==='ProgramCode' && vm.reverse===false, 'fa fa-sort-down': vm.predicate==='ProgramCode' && vm.reverse===true}"></i>
                            </th>
                            <th ng-click="vm.sortRates('ProgramName');" style="cursor: pointer;">
                                Program Name
                                <i ng-class="{'fa fa-sort-up': vm.predicate==='ProgramName' && vm.reverse===false, 'fa fa-sort-down': vm.predicate==='ProgramName' && vm.reverse===true}"></i>
                            </th>
                            <th ng-click="vm.sortRates('EffectiveStartDate');" style="cursor: pointer;">
                                Effective Start Date
                                <i ng-class="{'fa fa-sort-up': vm.predicate==='EffectiveStartDate' && vm.reverse===false, 'fa fa-sort-down': vm.predicate==='EffectiveStartDate' && vm.reverse===true}"></i>
                            </th>
                            <th ng-click="vm.sortRates('EffectiveEndDate');" style="cursor: pointer;">
                                Effective End Date
                                <i ng-class="{'fa fa-sort-up': vm.predicate==='EffectiveEndDate' && vm.reverse===false, 'fa fa-sort-down': vm.predicate==='EffectiveEndDate' && vm.reverse===true}"></i>
                            </th>
                            <th ng-click="vm.sortRates('Rate');" style="cursor: pointer;">
                                Rate
                                <i ng-class="{'fa fa-sort-up': vm.predicate==='Rate' && vm.reverse===false, 'fa fa-sort-down': vm.predicate==='Rate' && vm.reverse===true}"></i>
                            </th>
                            <th ng-click="vm.sortRates('State');" style="cursor: pointer;">
                                State
                                <i ng-class="{'fa fa-sort-up': vm.predicate==='State' && vm.reverse===false, 'fa fa-sort-down': vm.predicate==='State' && vm.reverse===true}"></i>
                            </th>
                            <th ng-click="vm.sortRates('Utility.Name');" style="cursor: pointer;">
                                Utility
                                <i ng-class="{'fa fa-sort-up': vm.predicate==='Utility.Name' && vm.reverse===false, 'fa fa-sort-down': vm.predicate==='Utility.Name' && vm.reverse===true}"></i>
                            </th>
                            <th ng-click="vm.sortRates('Msf');" style="cursor: pointer;">
                                MSF
                                <i ng-class="{'fa fa-sort-up': vm.predicate==='Msf' && vm.reverse===false, 'fa fa-sort-down': vm.predicate==='Msf' && vm.reverse===true}"></i>
                            </th>
                            <th ng-click="vm.sortRates('Etf');" style="cursor: pointer;">
                                ETF
                                <i ng-class="{'fa fa-sort-up': vm.predicate==='Etf' && vm.reverse===false, 'fa fa-sort-down': vm.predicate==='Etf' && vm.reverse===true}"></i>
                            </th>
                            <th ng-click="vm.sortRates('Term');" style="cursor: pointer;">
                                Term
                                <i ng-class="{'fa fa-sort-up': vm.predicate==='Term' && vm.reverse===false, 'fa fa-sort-down': vm.predicate==='Term' && vm.reverse===true}"></i>
                            </th>
                            <th ng-click="vm.sortRates('Brand.BrandName');" style="cursor: pointer;">
                                Brand
                                <i ng-class="{'fa fa-sort-up': vm.predicate==='Brand.BrandName' && vm.reverse===false, 'fa fa-sort-down': vm.predicate==='Brand.BrandName' && vm.reverse===true}"></i>
                            </th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <td colspan="11">
                                <pagination total-items="vm.totalItems" items-per-page="vm.pageSize" ng-model="vm.currentPage" ng-change="vm.pageChanged()"></pagination>
                            </td>
                        </tr>
                    </tfoot>
                    <tbody>
                        <tr>
                            <td colspan="11" class="text-center" ng-show="vm.loadingRates===true"><i class="fa fa-spinner fa-4x fa-pulse"></i></td>
                        </tr>
                        <tr ng-repeat="rate in vm.ratePage">
                            <td>{{rate.ProgramCode}}</td>
                            <td>{{rate.ProgramName}}</td>
                            <td>{{rate.EffectiveStartDate | date}}</td>
                            <td>{{rate.EffectiveEndDate | date}}</td>
                            <td>{{rate.Rate}}/{{rate.UnitOfMeasure.UnitOfMeasureName}}</td>
                            <td>{{rate.State}}</td>
                            <td>{{rate.Utility.Name}}</td>
                            <td>{{rate.Msf | currency}}</td>
                            <td>{{rate.Etf | currency}}</td>
                            <td>{{rate.Term}}</td>
                            <td>{{rate.Brand.BrandName}}</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/app/vendorOfficeController.js"></script>
    <script src="~/Scripts/app/vendorProgramController.js"></script>
}